{"version":3,"sources":["reducers/index.js","components/home.jsx","apis/url.js","apis/axios.js","action creators/index.js","history.js","components/login.jsx","components/register.jsx","components/Navbar/newChannel.jsx","components/Navbar/newInvite.jsx","components/Navbar/index.jsx","components/User/header.jsx","components/Tabs/Posts/channels.jsx","apis/sockets.js","components/Tabs/Posts/PostCreator.jsx","components/Tabs/Posts/ChatContainer.jsx","components/Tabs/Posts/index.jsx","components/Tabs/Top5/filter.jsx","components/Tabs/Top5/EntityTable.jsx","components/Tabs/Top5/index.jsx","components/Tabs/invites.jsx","components/Tabs/index.jsx","components/User/index.jsx","components/routes.jsx","components/App.jsx","index.js"],"names":["combineReducers","user","username","action","userAlreadyLoggedIn","JSON","parse","sessionStorage","getItem","type","payload","channels","posts","invites","top5","_","assign","entity","data","activeTab","activeChannel","_id","length","Home","state","to","Button","color","React","Component","localURL","window","location","protocol","hostname","axios","create","baseURL","URL","loadChannels","dispatch","a","get","params","loadTop5","filter","$gte","$lte","stringify","created","createInvite","formValues","post","res","createHistory","require","createBrowserHistory","Login","password","error","validate","setState","onSubmit","props","loginUser","handleChange","e","input","name","value","render","Form","Group","Input","label","placeholder","autoComplete","onChange","undefined","onClick","connect","setItem","history","push","msg","alert","Register","email","region","requestSent","emailValidator","test","passValidator","pass","regionValidator","usernameValidator","registerUser","content","pointing","loading","primary","NewChannelModal","description","tag","tags","modalOpen","handleOpen","handleClose","flag","validateTag","includes","onSubmitTag","removeTag","t","createChannel","renderTags","map","Label","key","Icon","link","Modal","trigger","icon","open","onClose","closeIcon","Header","Content","image","style","width","Field","control","TextArea","height","inline","size","Actions","CreateInvite","channel","openModal","closeModal","channel_id","channel_name","sent_by","err","this","Dropdown","marginLeft","Boolean","options","ch","text","Navbar","activeItem","handleItemClick","switchTab","Menu","position","Item","header","active","tab","Head","logout","clear","logoutUser","Segment","clearing","as","floated","Image","circular","src","Channels","componentDidMount","channelList","item","switchChannel","vertical","stackable","Loader","socket","io","contentCSS","resize","PostForm","replace","emit","marginTop","top","bottom","background","marginBottom","multiple","selection","border","Fragment","ChatContainer","container","document","getElementById","onscroll","scrollTop","skip","loadPosts","on","obj","updatePosts","scrollHeight","componentDidUpdate","prev","prevH","currentH","id","overflowY","scrollBehavior","i","createPost","getDerivedStateFromProps","wordWrap","Feed","User","marginRight","fontSize","moment","format","float","replaceBreaklines","split","arr","result","forEach","str","concat","pop","newPost","Posts","Grid","Row","paddingBottom","display","stretched","Column","overflowX","flexGrow","PostCreator","Filter","time","add","subtract","updateTop5","omit","localeCompare","flexWrap","max","Date","now","Entity","createList","Table","textAlign","basic","celled","collapsing","HeaderCell","toUpperCase","units","Body","Cell","count","Dimmer","inverted","Top5","horizontal","Invites","loadInvites","invite","Card","Description","extra","className","respondToInvite","invite_data","isAccepted","put","delete","ActiveTab","selectTab","setTimeout","Tabs","Routes","exact","path","component","App","padding","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.697caac1.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport _ from \"lodash\";\r\n\r\nconst loginReducer = (user = { username: false }, action) => {\r\n  const userAlreadyLoggedIn = JSON.parse(sessionStorage.getItem(\"user\"));\r\n  if (userAlreadyLoggedIn) return userAlreadyLoggedIn;\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return { username: false };\r\n    case \"LOGIN_USER\":\r\n    case \"REGISTER_USER\":\r\n      return action.payload;\r\n    default:\r\n      return user;\r\n  }\r\n};\r\n\r\nconst activeTabReducer = (activeTab = \"POSTS\", action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return \"POSTS\";\r\n    case \"SWITCH_TAB\":\r\n      return action.payload;\r\n    default:\r\n      return activeTab;\r\n  }\r\n};\r\n\r\nconst activeChannelReducer = (\r\n  activeChannel = { _id: false },\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case \"LOGOUT\":\r\n      return { _id: false };\r\n    case \"LOAD_USER_CHANNELS\":\r\n    case \"CREATE_CHANNEL\":\r\n      return payload.length < 1 ? activeChannel : payload[0];\r\n    case \"SWITCH_CHANNEL\":\r\n      return payload;\r\n    default:\r\n      return activeChannel;\r\n  }\r\n};\r\n\r\nconst userChannelsReducer = (channels = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return [];\r\n    case \"LOAD_USER_CHANNELS\":\r\n    case \"CREATE_CHANNEL\":\r\n      return action.payload;\r\n    default:\r\n      return channels;\r\n  }\r\n};\r\n\r\nconst userPostsReducer = (posts = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n    case \"SWITCH_TAB\":\r\n    case \"SWITCH_CHANNEL\":\r\n      return [];\r\n    case \"NEW_POST\":\r\n      return [...posts, action.payload];\r\n    case \"LOAD_USER_POSTS\":\r\n      return [...action.payload, ...posts];\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n\r\nconst userInvitesReducer = (invites = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return [];\r\n    case \"LOAD_USER_INVITES\":\r\n      return action.payload;\r\n    default:\r\n      return invites;\r\n  }\r\n};\r\n\r\nconst top5Reducer = (top5 = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case \"LOGOUT\":\r\n      return {};\r\n    case \"FETCH_TOP5\":\r\n      return _.assign(top5, { [payload.entity]: payload.data });\r\n    default:\r\n      return top5;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  user: loginReducer,\r\n  channels: userChannelsReducer,\r\n  posts: userPostsReducer,\r\n  invites: userInvitesReducer,\r\n  top5: top5Reducer,\r\n  activeTab: activeTabReducer,\r\n  activeChannel: activeChannelReducer\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nclass Home extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/login\">\r\n          <Button color=\"blue\">Login</Button>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <Button color=\"green\">Sign Up</Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// eslint-disable-next-line\r\nconst apiURL = \"https://kb512-team-up-api.herokuapp.com\";\r\n// eslint-disable-next-line\r\nconst localURL =\r\n  window.location.protocol + \"//\" + window.location.hostname + \":\" + 3001;\r\n\r\nexport default window.location.hostname === \"localhost\" ? localURL : apiURL;\r\n//export default apiURL;\r\n","import axios from \"axios\";\r\nimport URL from \"./url\";\r\n\r\nexport default axios.create({\r\n  baseURL: URL\r\n});\r\n","import axios from \"../apis/axios\";\r\n\r\nexport const loginUser = formValues => async dispatch => {\r\n  const user = await axios.get(\"/login\", {\r\n    params: formValues\r\n  });\r\n  dispatch({ type: \"LOGIN_USER\", payload: user.data });\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return { type: \"LOGOUT\" };\r\n};\r\n\r\nexport const switchTab = tab => {\r\n  return { type: \"SWITCH_TAB\", payload: tab };\r\n};\r\n\r\nexport const switchChannel = channel => {\r\n  return { type: \"SWITCH_CHANNEL\", payload: channel };\r\n};\r\n\r\nexport const registerUser = formValues => async dispatch => {\r\n  const user = await axios.post(\"/register\", formValues);\r\n  dispatch({ type: \"REGISTER_USER\", payload: user.data });\r\n};\r\n\r\nexport const loadChannels = username => async dispatch => {\r\n  const channels = (await axios.get(\"/channels\", { params: { username } }))\r\n    .data;\r\n  dispatch({\r\n    type: \"LOAD_USER_CHANNELS\",\r\n    payload: channels\r\n  });\r\n};\r\n\r\nexport const loadPosts = posts => {\r\n  return {\r\n    type: \"LOAD_USER_POSTS\",\r\n    payload: posts\r\n  };\r\n};\r\n\r\nexport const loadInvites = username => async dispatch => {\r\n  const invites = (await axios.get(\"/invitations\", { params: { username } }))\r\n    .data;\r\n  dispatch({\r\n    type: \"LOAD_USER_INVITES\",\r\n    payload: invites\r\n  });\r\n};\r\n\r\nexport const loadTop5 = (entity, filter) => async dispatch => {\r\n  filter =\r\n    filter.$gte || filter.$lte ? JSON.stringify({ created: filter }) : {};\r\n  const data = (await axios.get(\"/top5\", { params: { entity, filter } })).data;\r\n  dispatch({ type: \"FETCH_TOP5\", payload: { entity, data } });\r\n};\r\n\r\nexport const respondToInvite = (invite_data, isAccepted = true) => async () => {\r\n  if (isAccepted) await axios.put(\"/invitations\", invite_data);\r\n  else await axios.delete(\"/invitations\", { params: invite_data });\r\n  return null;\r\n};\r\n\r\nexport const createChannel = formValues => async dispatch => {\r\n  const msg = (await axios.post(\"/channels\", formValues)).data.msg;\r\n  alert(msg);\r\n  const channels = (\r\n    await axios.get(\"/channels\", { params: { username: formValues.username } })\r\n  ).data;\r\n  dispatch({ type: \"CREATE_CHANNEL\", payload: channels });\r\n};\r\n\r\nexport const createInvite = async formValues => {\r\n  const res = (await axios.post(\"/invitations\", formValues)).data;\r\n  return res;\r\n};\r\n\r\nexport const updatePosts = newPost => {\r\n  return { type: \"NEW_POST\", payload: newPost };\r\n};\r\n","const createHistory = require(\"history\").createBrowserHistory;\r\n\r\nexport default createHistory();\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../action creators\";\r\nimport history from \"../history\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: { username: false, password: false }\r\n  };\r\n\r\n  validate = formValues => {\r\n    let error = { username: false, password: false };\r\n    if (!formValues.username) error.username = \"Enter the username\";\r\n    if (!formValues.password) error.password = \"Enter the password\";\r\n    this.setState({ error });\r\n    if (error.username || error.password) return false;\r\n    return true;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const formValues = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    if (this.validate(formValues)) {\r\n      this.props.loginUser(formValues);\r\n    }\r\n  };\r\n\r\n  handleChange = (e, input) => {\r\n    return this.setState({ [input.name]: input.value });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Input\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"off\"\r\n            onChange={this.handleChange}\r\n            error={\r\n              this.state.error.username ? this.state.error.username : undefined\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Input\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            onChange={this.handleChange}\r\n            error={\r\n              this.state.error.password ? this.state.error.password : undefined\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <br />\r\n        <Form.Button onClick={this.onSubmit} color=\"blue\">\r\n          Login\r\n        </Form.Button>\r\n      </Form>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n  if (user.username) {\r\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n    history.push(\"/user\");\r\n  }\r\n  if (user.msg) {\r\n    alert(user.msg);\r\n  }\r\n  return user;\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport { registerUser } from \"../action creators\";\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    region: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    requestSent: false,\r\n    error: { email: false, region: false, username: false, password: false }\r\n  };\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n\r\n  emailValidator = email => {\r\n    // eslint-disable-next-line\r\n    const pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    if (email === \"\" || !pattern.test(email)) return false;\r\n    return true;\r\n  };\r\n  passValidator = pass => {\r\n    if (pass === \"\" || !/[a-zA-Z0-9._@]{8,}/.test(pass)) return false;\r\n    return true;\r\n  };\r\n  regionValidator = pass => {\r\n    if (pass === \"\" || !/^[a-zA-Z]{2,}$/.test(pass)) return false;\r\n    return true;\r\n  };\r\n  usernameValidator = pass => {\r\n    if (pass === \"\" || !/^[a-z0-9_-]{3,}$/.test(pass)) return false;\r\n    return true;\r\n  };\r\n\r\n  validate = formValues => {\r\n    let error = {\r\n      email: false,\r\n      region: false,\r\n      username: false,\r\n      password: false\r\n    };\r\n\r\n    if (!this.usernameValidator(formValues.username))\r\n      error.username =\r\n        \"Enter a valid username ( only '-' , '_' , a-z , A-z , 0-9 are allowed. Min Length = 3 )  \";\r\n    if (!this.regionValidator(formValues.region))\r\n      error.region = \"Enter a valid region\";\r\n\r\n    if (!this.emailValidator(formValues.email))\r\n      error.email = \"Please enter a valid email address\";\r\n    if (!this.passValidator(formValues.password))\r\n      error.password =\r\n        \"Invalid Password Format ( only '.' , '@' , '_' , a-z , A-z , 0-9 are allowed. Min Length = 8 )\";\r\n    this.setState({ error, requestSent: false });\r\n    if (error.email || error.region || error.username || error.password)\r\n      return false;\r\n    return true;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState({ requestSent: true });\r\n    const formValues = {\r\n      email: this.state.email,\r\n      region: this.state.region,\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    if (this.validate(formValues)) {\r\n      this.props.registerUser(formValues);\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Input\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            onChange={this.handleChange}\r\n            error={\r\n              this.state.error.email\r\n                ? {\r\n                    content: this.state.error.email,\r\n                    pointing: \"below\"\r\n                  }\r\n                : undefined\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Input\r\n            label=\"Region\"\r\n            placeholder=\"Region\"\r\n            name=\"region\"\r\n            onChange={this.handleChange}\r\n            error={\r\n              this.state.error.region\r\n                ? {\r\n                    content: this.state.error.region,\r\n                    pointing: \"below\"\r\n                  }\r\n                : undefined\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Input\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            onChange={this.handleChange}\r\n            error={\r\n              this.state.error.username\r\n                ? {\r\n                    content: this.state.error.username,\r\n                    pointing: \"below\"\r\n                  }\r\n                : undefined\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Input\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={this.handleChange}\r\n            error={\r\n              this.state.error.password\r\n                ? {\r\n                    content: this.state.error.password,\r\n                    pointing: \"below\"\r\n                  }\r\n                : undefined\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <br />\r\n        {this.state.requestSent ? (\r\n          <Button loading primary>\r\n            Loading\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"green\" onClick={this.onSubmit}>\r\n            Register\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n  if (user.username) {\r\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n    history.push(\"/user\");\r\n  }\r\n  if (user.msg) {\r\n    alert(user.msg);\r\n  }\r\n  return user;\r\n};\r\n\r\nexport default connect(mapStateToProps, { registerUser })(Register);\r\n","import React from \"react\";\r\nimport { Button, Icon, Form, Modal, TextArea, Label } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createChannel } from \"../../action creators\";\r\n\r\nclass NewChannelModal extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    description: \"\",\r\n    tag: \"\",\r\n    tags: [],\r\n    modalOpen: false,\r\n    error: { name: false, description: false, tag: false }\r\n  };\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n  handleOpen = () => this.setState({ modalOpen: true });\r\n  handleClose = () => this.setState({ modalOpen: false });\r\n\r\n  validate = () => {\r\n    let error = { name: false, description: false },\r\n      flag = true;\r\n    if (!this.state.name.length) {\r\n      error.name = \"Enter a Channel Name\";\r\n      flag = false;\r\n    }\r\n    if (!this.state.description.length) {\r\n      error.description = \"Enter a Description\";\r\n      flag = false;\r\n    }\r\n    if (this.state.tags.length <= 0) {\r\n      error.tag = \"Add atleast one tag\";\r\n      flag = false;\r\n    }\r\n    this.setState({ error });\r\n    return flag;\r\n  };\r\n\r\n  validateTag = () => {\r\n    let error = { ...this.state.error };\r\n    if (this.state.tag.length <= 0) {\r\n      error.tag = \"Enter a Tag\";\r\n      this.setState({ error });\r\n      return false;\r\n    } else if (this.state.tags.includes(this.state.tag)) {\r\n      error.tag = \"Tag already added\";\r\n      this.setState({ error });\r\n      return false;\r\n    }\r\n    error.tag = false;\r\n    this.setState({ error });\r\n    return true;\r\n  };\r\n\r\n  onSubmitTag = () => {\r\n    if (this.validateTag())\r\n      this.setState({ tags: [...this.state.tags, this.state.tag] });\r\n  };\r\n\r\n  removeTag = t => {\r\n    this.setState({ tags: this.state.tags.filter(tag => tag !== t) });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    if (this.validate()) {\r\n      this.props.createChannel({\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        tags: this.state.tags,\r\n        username: this.props.username\r\n      });\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  renderTags = () =>\r\n    this.state.tags.map(tag => {\r\n      return (\r\n        <Label key={tag} color=\"orange\">\r\n          {tag}\r\n          <Icon\r\n            name=\"delete\"\r\n            link\r\n            onClick={() => {\r\n              this.removeTag(tag);\r\n            }}\r\n          />\r\n        </Label>\r\n      );\r\n    });\r\n\r\n  render = () => {\r\n    return (\r\n      <Modal\r\n        trigger={\r\n          <Button onClick={this.handleOpen} icon primary>\r\n            <Icon name=\"add\" /> New Channel\r\n          </Button>\r\n        }\r\n        open={this.state.modalOpen}\r\n        onClose={this.handleClose}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Create a new Channel</Modal.Header>\r\n        <Modal.Content image>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Input\r\n                label=\"Name\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                style={{ width: \"40rem\" }}\r\n                error={\r\n                  this.state.error.name\r\n                    ? {\r\n                        content: this.state.error.name,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                label=\"Description\"\r\n                placeholder=\"Description\"\r\n                control={TextArea}\r\n                name=\"description\"\r\n                onChange={this.handleChange}\r\n                style={{ width: \"40rem\", height: \"10rem\" }}\r\n                error={\r\n                  this.state.error.description\r\n                    ? {\r\n                        content: this.state.error.description,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <Form.Input\r\n                label=\"Tag\"\r\n                placeholder=\"Tag\"\r\n                name=\"tag\"\r\n                onChange={this.handleChange}\r\n                error={\r\n                  this.state.error.tag\r\n                    ? {\r\n                        content: this.state.error.tag,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n              <Icon\r\n                size=\"large\"\r\n                color=\"green\"\r\n                name=\"add\"\r\n                link\r\n                onClick={this.onSubmitTag}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group> {this.renderTags()}</Form.Group>\r\n            <br />\r\n            <Modal.Actions>\r\n              <Button color=\"green\" onClick={this.onSubmit}>\r\n                SUBMIT\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  };\r\n}\r\n\r\nconst getData = ({ user }) => user;\r\n\r\nexport default connect(getData, { createChannel })(NewChannelModal);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Icon, Form, Modal, Dropdown } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createInvite, loadChannels } from \"../../action creators\";\r\nclass CreateInvite extends Component {\r\n  state = {\r\n    channel: {},\r\n    username: \"\",\r\n    modalOpen: false,\r\n    requestSent: false,\r\n    error: { username: false, channel: false }\r\n  };\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name]: name === \"channel\" ? JSON.parse(value) : value });\r\n  openModal = () => {\r\n    if (this.props.channels.length < 1) {\r\n      alert(\"No Channel created to Invite anyone\");\r\n    } else this.setState({ modalOpen: true });\r\n  };\r\n  closeModal = () => this.setState({ modalOpen: false });\r\n\r\n  validate = () => {\r\n    this.setState({ requestSent: true });\r\n    let error = { username: false, channel: false },\r\n      flag = true;\r\n    if (!this.state.channel._id) {\r\n      error.channel = \"Select a Channel\";\r\n      flag = false;\r\n    }\r\n    this.setState({ error });\r\n    return flag;\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    if (!this.validate()) {\r\n      this.setState({ requestSent: false });\r\n      return;\r\n    }\r\n    const msg = await createInvite({\r\n      channel_id: this.state.channel._id,\r\n      channel_name: this.state.channel.name,\r\n      username: this.state.username,\r\n      sent_by: this.state.channel.username\r\n    });\r\n    this.setState({ requestSent: false });\r\n    if (msg.err) {\r\n      this.setState({\r\n        error: { username: msg.err, channel: false }\r\n      });\r\n    } else {\r\n      this.closeModal();\r\n      alert(msg.msg);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        trigger={\r\n          <Button onClick={this.openModal} icon primary>\r\n            <Icon name=\"add\" /> New Invite\r\n          </Button>\r\n        }\r\n        open={this.state.modalOpen}\r\n        onClose={this.closeModal}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Send an Invite </Modal.Header>\r\n        <Modal.Content image>\r\n          <Form>\r\n            <Form.Group>\r\n              <Dropdown\r\n                style={{ marginLeft: \"2%\" }}\r\n                name=\"channel\"\r\n                onChange={this.handleChange}\r\n                placeholder=\"Channel\"\r\n                error={Boolean(this.state.error.channel)}\r\n                options={this.props.channels\r\n                  .filter(ch => ch.username === this.props.user.username)\r\n                  .map(({ _id, name, username }) => {\r\n                    return {\r\n                      key: _id,\r\n                      text: name,\r\n                      value: JSON.stringify({ _id, name, username })\r\n                    };\r\n                  })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Input\r\n                label=\"Username\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                onChange={this.handleChange}\r\n                style={{ width: \"40rem\" }}\r\n                error={\r\n                  this.state.error.username\r\n                    ? {\r\n                        content: this.state.error.username,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <br />\r\n            <Modal.Actions>\r\n              {this.state.requestSent ? (\r\n                <Button loading primary>\r\n                  Loading\r\n                </Button>\r\n              ) : (\r\n                <Button color=\"blue\" onClick={this.onSubmit}>\r\n                  INVITE\r\n                </Button>\r\n              )}\r\n            </Modal.Actions>\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ channels, user }) => {\r\n    return { channels, user };\r\n  },\r\n  { loadChannels }\r\n)(CreateInvite);\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { switchTab } from \"../../action creators\";\r\nimport NewChannelBtn from \"./newChannel\";\r\nimport NewInviteBtn from \"./newInvite\";\r\n\r\nclass Navbar extends Component {\r\n  state = { activeItem: \"POSTS\" };\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.props.switchTab(name);\r\n    this.setState({ activeItem: name });\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu\r\n        style={{ position: \"relative\", height: \"6%\" }}\r\n        size=\"large\"\r\n        pointing\r\n      >\r\n        <Menu.Item header>TEAM-UP</Menu.Item>\r\n        <Menu.Item\r\n          name=\"POSTS\"\r\n          active={this.state.activeItem === \"POSTS\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"TOP5\"\r\n          active={this.state.activeItem === \"TOP5\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item\r\n            name=\"INVITES\"\r\n            active={this.state.activeItem === \"INVITES\"}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Item>\r\n            <NewChannelBtn />\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <NewInviteBtn />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { switchTab })(Navbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../action creators\";\r\nimport { Button, Header, Image, Segment } from \"semantic-ui-react\";\r\n\r\nclass Head extends React.Component {\r\n  state = {};\r\n  logout = () => {\r\n    sessionStorage.clear();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <Segment style={{ height: \"auto\" }} clearing>\r\n        <Header as=\"h2\" floated=\"left\">\r\n          <Image\r\n            circular\r\n            src=\"https://react.semantic-ui.com/images/avatar/large/patrick.png\"\r\n          />\r\n          {this.props.username}\r\n        </Header>\r\n        <Link to=\"/\">\r\n          <Button floated=\"right\" color=\"black\" onClick={this.logout}>\r\n            Logout\r\n          </Button>\r\n        </Link>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { logoutUser })(Head);\r\n","import React from \"react\";\r\nimport { Menu, Loader } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadChannels, switchChannel } from \"../../../action creators\";\r\nclass Channels extends React.Component {\r\n  state = { activeItem: \"\" };\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.loadChannels(this.props.user.username);\r\n    if (this.props.channels && this.props.channels.length)\r\n      this.setState({ activeItem: this.props.channels[0].name });\r\n  };\r\n\r\n  channelList = channel => (\r\n    <Menu.Item\r\n      name={channel.name}\r\n      key={channel._id}\r\n      active={this.state.activeItem === channel.name}\r\n      onClick={(e, item) => {\r\n        this.handleItemClick(e, item);\r\n        this.props.switchChannel(channel);\r\n      }}\r\n    />\r\n  );\r\n\r\n  render = () =>\r\n    this.props.channels ? (\r\n      <Menu text vertical stackable>\r\n        <Menu.Item header>CHANNELS</Menu.Item>\r\n        {this.props.channels.map(channel => this.channelList(channel))}\r\n      </Menu>\r\n    ) : (\r\n      <Loader active inline />\r\n    );\r\n}\r\n\r\nconst getChannels = ({ user, channels }) => {\r\n  return { user, channels };\r\n};\r\n\r\nexport default connect(getChannels, { loadChannels, switchChannel })(Channels);\r\n","import io from \"socket.io-client\";\r\nimport URL from \"./url\";\r\n\r\nconst socket = io(URL);\r\n\r\nexport default socket;\r\n","import React, { Component } from \"react\";\r\nimport { TextArea, Segment, Dropdown, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport socket from \"../../../apis/sockets\";\r\n\r\nconst contentCSS = {\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  height: \"70%\",\r\n  resize: \"none\"\r\n};\r\nclass PostForm extends Component {\r\n  state = { content: \"\", tags: [], error: false };\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    this.setState({\r\n      [name]:\r\n        name === \"content\"\r\n          ? value.replace(/[/^ *$/]{2,}/g, \" \").replace(/^\\s*[\\r\\n]/gm, \"\")\r\n          : value\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    if (this.state.content.length < 2) {\r\n      this.setState({ error: \"Invalid Content\" });\r\n      return false;\r\n    }\r\n    this.setState({ error: false });\r\n    return true;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    if (!this.validate()) return;\r\n    socket.emit(\"new_post\", {\r\n      username: this.props.user.username,\r\n      tags: this.state.tags,\r\n      content: this.state.content,\r\n      channel_id: this.props.activeChannel._id\r\n    });\r\n    this.setState({ content: \"\", tags: [], error: false });\r\n  };\r\n\r\n  render() {\r\n    return this.props.activeChannel._id ? (\r\n      <Segment\r\n        style={{\r\n          position: \"relative\",\r\n          height: \"20%\",\r\n          marginTop: \"0\",\r\n          top: \"0\",\r\n          bottom: \"0\",\r\n          background: \"#989898\"\r\n        }}\r\n      >\r\n        <Dropdown\r\n          name=\"tags\"\r\n          placeholder=\"Tags\"\r\n          style={{ position: \"relative\", marginBottom: \"0.3%\" }}\r\n          multiple\r\n          selection\r\n          value={this.state.tags}\r\n          options={this.props.activeChannel.tags.map((tag) => {\r\n            return { key: tag, text: tag, value: tag };\r\n          })}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Button color=\"green\" floated=\"right\" onClick={this.onSubmit}>\r\n          POST\r\n        </Button>\r\n        <br />\r\n        <TextArea\r\n          name=\"content\"\r\n          placeholder={this.state.error ? \"Enter some text!\" : \"Post Content\"}\r\n          style={\r\n            this.state.error\r\n              ? _.assign(contentCSS, { border: \"4px solid red\" })\r\n              : contentCSS\r\n          }\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n      </Segment>\r\n    ) : (\r\n      <React.Fragment>Loading..</React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(({ activeChannel, user }) => {\r\n  return { activeChannel, user };\r\n})(PostForm);\r\n","import React, { Component } from \"react\";\r\nimport { Segment, Feed, Label } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { updatePosts, loadPosts } from \"../../../action creators\";\r\nimport socket from \"../../../apis/sockets\";\r\n\r\nclass ChatContainer extends Component {\r\n  state = { activeChannel: false };\r\n\r\n  componentDidMount = () => {\r\n    let container = document.getElementById(\"chatContainer\");\r\n    container.onscroll = () => {\r\n      // console.clear();\r\n      //   console.log(container.scrollTop, container.scrollHeight);\r\n      if (container.scrollTop === 0) {\r\n        socket.emit(\r\n          \"fetch_old_posts\",\r\n          {\r\n            channel_id: this.props.activeChannel._id,\r\n            skip: this.props.posts.length\r\n          },\r\n          this.props.loadPosts\r\n        );\r\n      }\r\n    };\r\n    socket.on(\"new_post_braodcast\", (obj) => {\r\n      this.props.updatePosts(obj);\r\n      if (container.scrollHeight) container.scrollTop = container.scrollHeight;\r\n    });\r\n  };\r\n\r\n  componentDidUpdate = (prev) => {\r\n    let container = document.getElementById(\"chatContainer\"),\r\n      prevH = prev.posts.length,\r\n      currentH = this.props.posts.length;\r\n    if (prevH < currentH) {\r\n      if (prevH < 1) container.scrollTop = container.scrollHeight;\r\n      else\r\n        container.scrollTop =\r\n          1 + (container.scrollHeight * (currentH - prevH)) / currentH;\r\n    }\r\n  };\r\n  static getDerivedStateFromProps = (props, state) => {\r\n    if (\r\n      props.activeChannel &&\r\n      props.activeChannel._id !== state.activeChannel._id\r\n    ) {\r\n      socket.emit(\r\n        \"join_channel_room\",\r\n        props.activeChannel._id,\r\n        props.loadPosts\r\n      );\r\n      return { activeChannel: props.activeChannel };\r\n    }\r\n    return state;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Segment\r\n        id=\"chatContainer\"\r\n        style={{\r\n          position: \"relative\",\r\n          overflowY: \"scroll\",\r\n          scrollBehavior: \"smooth\",\r\n          height: \"70%\",\r\n          marginBottom: \"0\",\r\n          background: \"#D0D0D0\"\r\n        }}\r\n      >\r\n        {this.props.posts.map((post, i) => createPost(post, i))}\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nconst createPost = (post, i) => {\r\n  return (\r\n    <Segment style={{ wordWrap: \"break-word\" }} key={i}>\r\n      <Feed.User>\r\n        <b style={{ marginRight: \"1%\", fontSize: \"1.1rem\" }}>{post.username}</b>\r\n      </Feed.User>\r\n      <span style={{ color: \"#bfbfbf\", fontSize: \"0.85rem\" }}>\r\n        {moment(post.created, \"x\").format(\"h:mm A, D-MMM-YYYY\")}\r\n      </span>\r\n      <span style={{ float: \"right\" }}>\r\n        {post.tags.map((tag) => (\r\n          <Label color=\"orange\" key={tag}>\r\n            {tag}\r\n          </Label>\r\n        ))}\r\n      </span>\r\n      <br />\r\n      {replaceBreaklines(post.content.split(\"\\n\"))}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nconst replaceBreaklines = (arr) => {\r\n  let result = [];\r\n  arr.forEach((str) => {\r\n    result = result.concat([str, <br />]);\r\n  });\r\n  result.pop();\r\n  return result;\r\n};\r\n\r\nconst getActiveChannel = ({ activeChannel, posts, user }) => {\r\n  return { activeChannel, posts, user };\r\n};\r\n\r\nexport default connect(getActiveChannel, { updatePosts, loadPosts })(\r\n  ChatContainer\r\n);\r\n","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Channels from \"./channels\";\r\nimport PostCreator from \"./PostCreator\";\r\nimport ChatContainer from \"./ChatContainer\";\r\n\r\nclass Posts extends React.Component {\r\n  state = {};\r\n  render = () => {\r\n    return (\r\n      <Grid style={{ position: \"relative\", height: \"100%\" }} stackable>\r\n        <Grid.Row\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"100%\",\r\n            paddingBottom: \"0\",\r\n            display: \"flex\"\r\n          }}\r\n          stretched\r\n        >\r\n          <Grid.Column\r\n            style={{\r\n              position: \"relative\",\r\n              overflowX: \"auto\",\r\n              overflowY: \"scroll\",\r\n              width: \"auto\",\r\n              height: \"100%\"\r\n            }}\r\n          >\r\n            <Channels />\r\n          </Grid.Column>\r\n          <br />\r\n          <Grid.Column\r\n            style={{\r\n              position: \"relative\",\r\n              flexGrow: \"100\",\r\n              height: \"100%\"\r\n            }}\r\n          >\r\n            <ChatContainer />\r\n            <PostCreator />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport { loadTop5 } from \"../../../action creators\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nclass Filter extends Component {\r\n  state = {};\r\n  handleChange = (e, { name, value }) => {\r\n    const time =\r\n      name === \"$lte\"\r\n        ? moment(value)\r\n            .add(\"1\", \"day\")\r\n            .subtract(\"1\", \"milliseconds\")\r\n            .format(\"x\")\r\n        : moment(value).format(\"x\");\r\n\r\n    if (value === \"\") {\r\n      this.updateTop5(_.omit(this.state, name));\r\n      delete this.state[name];\r\n      this.setState({});\r\n    } else {\r\n      if (!this.validate(name, time)) {\r\n        alert(\"Invalid Range\");\r\n        return;\r\n      }\r\n      this.updateTop5({ ...this.state, [name]: time });\r\n      this.setState({\r\n        [name]: time\r\n      });\r\n    }\r\n  };\r\n\r\n  validate = (name, time) => {\r\n    if (name === \"$lte\" && this.state.$gte)\r\n      return this.state.$gte.localeCompare(time) === -1;\r\n    if (name === \"$gte\" && this.state.$lte)\r\n      return time.localeCompare(this.state.$lte) === -1;\r\n    return true;\r\n  };\r\n\r\n  updateTop5 = filter => {\r\n    this.props.loadTop5(\"channels\", filter);\r\n    this.props.loadTop5(\"users\", filter);\r\n    this.props.loadTop5(\"tags\", filter);\r\n    this.props.loadTop5(\"regions\", filter);\r\n  };\r\n  s;\r\n\r\n  render = () => {\r\n    return (\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        <Form.Input\r\n          label=\"FROM:\"\r\n          name=\"$gte\"\r\n          type=\"date\"\r\n          style={{ marginLeft: \"1rem\" }}\r\n          onChange={this.handleChange}\r\n          max={moment(Date.now(), \"x\").format(\"YYYY-MM-DD\")}\r\n        />\r\n        <div style={{ marginLeft: \"3rem\" }}>\r\n          <Form.Input\r\n            label=\"TO:\"\r\n            name=\"$lte\"\r\n            type=\"date\"\r\n            style={{ marginLeft: \"1rem\" }}\r\n            onChange={this.handleChange}\r\n            max={moment(Date.now(), \"x\").format(\"YYYY-MM-DD\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default connect(null, { loadTop5 })(Filter);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Segment, Header, Table } from \"semantic-ui-react\";\r\nimport { loadTop5 } from \"../../../action creators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Entity extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.loadTop5(this.props.name, {});\r\n  };\r\n  createList = arr => {\r\n    return (\r\n      <Table style={{ textAlign: \"center\" }} basic=\"very\" celled collapsing>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>{this.props.name.toUpperCase()}</Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              {this.units(this.props.name).toUpperCase()}\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {arr.map(item => (\r\n            <Table.Row\r\n              key={this.props.name === \"channels\" ? item.name : item._id}\r\n            >\r\n              <Table.Cell>\r\n                {this.props.name === \"channels\" ? item.name : item._id}\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                {this.props.name === \"tags\" ? item.channels.length : item.count}\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  };\r\n  units(name) {\r\n    switch (name) {\r\n      case \"channels\":\r\n      case \"users\":\r\n        return \"Posts\";\r\n      case \"regions\":\r\n        return \"Users\";\r\n      case \"tags\":\r\n        return \"Channels\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n  render() {\r\n    return this.props[this.props.name] ? (\r\n      <Segment>\r\n        <Header as=\"h2\" floated=\"left\">\r\n          Top {this.props.name}\r\n        </Header>\r\n        <br />\r\n        {this.createList(this.props[this.props.name])}\r\n      </Segment>\r\n    ) : (\r\n      <Dimmer active inverted>\r\n        <Loader content=\"Loading\" />\r\n      </Dimmer>\r\n    );\r\n  }\r\n}\r\n\r\nconst getTop5 = ({ top5 }, { name }) => {\r\n  return { [name]: top5[name] };\r\n};\r\n\r\nexport default connect(getTop5, { loadTop5 })(Entity);\r\n","import React from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport Filter from \"./filter\";\r\nimport Entity from \"./EntityTable\";\r\n\r\nclass Top5 extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <>\r\n        <Filter />\r\n        <Segment.Group horizontal>\r\n          <Entity name=\"users\" />\r\n          <Entity name=\"channels\" />\r\n        </Segment.Group>\r\n        <Segment.Group horizontal>\r\n          <Entity name=\"regions\" />\r\n          <Entity name=\"tags\" />\r\n        </Segment.Group>\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Top5;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { respondToInvite, loadInvites } from \"../../action creators\";\r\n\r\nclass Invites extends React.Component {\r\n  state = {};\r\n  componentDidMount = async () => {\r\n    await this.props.loadInvites(this.props.user.username);\r\n    //console.log(this.props);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.invites.length\r\n          ? this.props.invites.map(invite => (\r\n              <Card key={invite._id}>\r\n                <Card.Content>\r\n                  <Card.Header>{invite.channel_name}</Card.Header>\r\n                  <Card.Description>\r\n                    <strong>{invite.sent_by}</strong> invited you to this\r\n                    channel.\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                  <div className=\"ui two buttons\">\r\n                    <Button\r\n                      onClick={async () => {\r\n                        await this.props.respondToInvite({\r\n                          _id: invite._id\r\n                        });\r\n                        await this.props.loadInvites(this.props.user.username);\r\n                      }}\r\n                      basic\r\n                      color=\"green\"\r\n                    >\r\n                      Accept\r\n                    </Button>\r\n                    <Button\r\n                      onClick={async () => {\r\n                        await this.props.respondToInvite(\r\n                          {\r\n                            _id: invite._id\r\n                          },\r\n                          false\r\n                        );\r\n                        await this.props.loadInvites(this.props.user.username);\r\n                      }}\r\n                      basic\r\n                      color=\"red\"\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            ))\r\n          : \"No Invites\"}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst getData = ({ user, invites }) => {\r\n  return { user, invites };\r\n};\r\n\r\nexport default connect(getData, { respondToInvite, loadInvites })(Invites);\r\n","import React from \"react\";\r\nimport Posts from \"./Posts/index\";\r\nimport Top5 from \"./Top5/index\";\r\nimport Invites from \"./invites\";\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nclass ActiveTab extends React.Component {\r\n  selectTab = () => {\r\n    switch (this.props.tab) {\r\n      case \"TOP5\":\r\n        return <Top5 />;\r\n      case \"INVITES\":\r\n        return <Invites />;\r\n      default:\r\n        return <Posts />;\r\n    }\r\n  };\r\n  render = () => (\r\n    <Segment style={{ position: \"relative\", height: \"80%\" }}>\r\n      {this.selectTab()}\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default ActiveTab;\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navbar from \"../Navbar\";\r\nimport Header from \"./header\";\r\nimport Tabs from \"../Tabs\";\r\nimport history from \"../../history\";\r\n\r\nclass User extends React.Component {\r\n  state = {};\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n      const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n      if (!user) {\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n    }, 800);\r\n  };\r\n  render = () => {\r\n    return this.props.user ? (\r\n      <React.Fragment>\r\n        <Header username={this.props.user.username} />\r\n\r\n        <Navbar />\r\n        <Tabs tab={this.props.activeTab} />\r\n      </React.Fragment>\r\n    ) : (\r\n      <Dimmer active inverted>\r\n        <Loader content=\"Loading\" />\r\n      </Dimmer>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ activeTab, user }) => {\r\n  return { activeTab, user };\r\n};\r\nexport default connect(mapStateToProps)(User);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./home\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\nimport User from \"./User\";\r\n\r\nclass Routes extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/user\" component={User} />\r\n      </Switch>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Routes from \"./routes\";\r\nimport { Router } from \"react-router-dom\";\r\nimport history from \"../history\";\r\n\r\nexport default class App extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          padding: \"2%\",\r\n          position: \"absolute\",\r\n          width: \"100vw\",\r\n          height: \"100vh\"\r\n        }}\r\n      >\r\n        <Router history={history}>\r\n          <Routes />\r\n        </Router>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport App from \"./components/App\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}