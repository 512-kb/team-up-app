{"version":3,"sources":["reducers/index.js","components/home.jsx","apis/url.js","apis/axios.js","action creators/index.js","history.js","components/login.jsx","components/register.jsx","components/Navbar/newChannel.jsx","components/Navbar/newInvite.jsx","components/Navbar/index.jsx","components/User/header.jsx","components/Tabs/Posts/channels.jsx","apis/sockets.js","components/Tabs/Posts/PostCreator.jsx","components/Tabs/Posts/ChatContainer.jsx","components/Tabs/Posts/index.jsx","components/Tabs/Top5/filter.jsx","components/Tabs/Top5/EntityTable.jsx","components/Tabs/Top5/index.jsx","components/Tabs/invites.jsx","components/Tabs/index.jsx","components/User/index.jsx","components/routes.jsx","components/App.jsx","index.js"],"names":["combineReducers","user","action","userAlreadyLoggedIn","JSON","parse","sessionStorage","getItem","type","payload","channels","posts","invites","top5","_","assign","entity","data","activeTab","activeChannel","_id","length","form","formReducer","Home","state","to","Button","color","React","Component","localURL","window","location","protocol","hostname","axios","create","baseURL","URL","loadChannels","username","dispatch","a","get","params","loadTop5","filter","$gte","$lte","stringify","created","createInvite","formValues","post","res","createHistory","require","createBrowserHistory","Login","componentDidUpdate","props","submitSucceeded","setItem","history","push","err","setState","renderInput","input","Form","Input","label","name","toUpperCase","slice","style","width","required","autoComplete","render","loginUser","handleSubmit","submitting","error","onSubmit","Field","component","Message","header","content","loading","connect","reduxForm","Register","requestSent","validator","email","pattern","password","region","Object","entries","key","val","test","reset","SubmissionError","meta","asyncValidating","touched","Group","pointing","undefined","pristine","disabled","onClick","asyncValidate","asyncChangeFields","NewChannelModal","description","tag","tags","modalOpen","handleChange","e","value","handleOpen","handleClose","validate","flag","validateTag","includes","onSubmitTag","removeTag","t","createChannel","renderTags","map","Label","Icon","link","Modal","trigger","icon","primary","open","onClose","closeIcon","Header","Content","image","placeholder","onChange","control","TextArea","height","inline","size","Actions","msg","alert","CreateInvite","channel","openModal","closeModal","channel_id","channel_name","sent_by","this","Dropdown","marginLeft","Boolean","options","ch","text","Navbar","activeItem","handleItemClick","switchTab","Menu","position","Item","active","tab","Head","logout","clear","logoutUser","Segment","clearing","as","floated","Image","circular","src","Channels","componentDidMount","channelList","item","switchChannel","vertical","stackable","Loader","socket","io","contentCSS","resize","PostForm","replace","emit","marginTop","top","bottom","background","marginBottom","multiple","selection","border","Fragment","ChatContainer","container","document","getElementById","onscroll","scrollTop","skip","loadPosts","on","obj","updatePosts","scrollHeight","prev","prevH","currentH","id","overflowY","scrollBehavior","i","createPost","getDerivedStateFromProps","wordWrap","Feed","User","marginRight","fontSize","moment","format","float","replaceBreaklines","split","arr","result","forEach","str","pop","newPost","Posts","Grid","Row","paddingBottom","display","stretched","Column","overflowX","flexGrow","PostCreator","Filter","time","add","subtract","updateTop5","omit","localeCompare","flexWrap","max","Date","now","Entity","createList","Table","textAlign","basic","celled","collapsing","HeaderCell","units","Body","Cell","count","Dimmer","inverted","Top5","horizontal","Invites","loadInvites","invite","Card","Description","extra","className","respondToInvite","invite_data","isAccepted","put","delete","ActiveTab","selectTab","setTimeout","Tabs","Routes","exact","path","App","padding","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.2c8d5d78.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport _ from \"lodash\";\r\n\r\nconst loginReducer = (user = {}, action) => {\r\n  const userAlreadyLoggedIn = JSON.parse(sessionStorage.getItem(\"user\"));\r\n  if (userAlreadyLoggedIn) return userAlreadyLoggedIn;\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return {};\r\n    case \"LOGIN_USER\":\r\n      return action.payload;\r\n    default:\r\n      return user;\r\n  }\r\n};\r\n\r\nconst activeTabReducer = (activeTab = \"POSTS\", action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return \"POSTS\";\r\n    case \"SWITCH_TAB\":\r\n      return action.payload;\r\n    default:\r\n      return activeTab;\r\n  }\r\n};\r\n\r\nconst activeChannelReducer = (\r\n  activeChannel = { _id: false },\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case \"LOGOUT\":\r\n      return { _id: false };\r\n    case \"LOAD_USER_CHANNELS\":\r\n    case \"CREATE_CHANNEL\":\r\n      return payload.length < 1 ? activeChannel : payload[0];\r\n    case \"SWITCH_CHANNEL\":\r\n      return payload;\r\n    default:\r\n      return activeChannel;\r\n  }\r\n};\r\n\r\nconst userChannelsReducer = (channels = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return [];\r\n    case \"LOAD_USER_CHANNELS\":\r\n    case \"CREATE_CHANNEL\":\r\n      return action.payload;\r\n    default:\r\n      return channels;\r\n  }\r\n};\r\n\r\nconst userPostsReducer = (posts = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n    case \"SWITCH_TAB\":\r\n    case \"SWITCH_CHANNEL\":\r\n      return [];\r\n    case \"NEW_POST\":\r\n      return [...posts, action.payload];\r\n    case \"LOAD_USER_POSTS\":\r\n      return [...action.payload, ...posts];\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n\r\nconst userInvitesReducer = (invites = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT\":\r\n      return [];\r\n    case \"LOAD_USER_INVITES\":\r\n      return action.payload;\r\n    default:\r\n      return invites;\r\n  }\r\n};\r\n\r\nconst top5Reducer = (top5 = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case \"LOGOUT\":\r\n      return {};\r\n    case \"FETCH_TOP5\":\r\n      return _.assign(top5, { [payload.entity]: payload.data });\r\n    default:\r\n      return top5;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  user: loginReducer,\r\n  channels: userChannelsReducer,\r\n  posts: userPostsReducer,\r\n  invites: userInvitesReducer,\r\n  top5: top5Reducer,\r\n  activeTab: activeTabReducer,\r\n  activeChannel: activeChannelReducer,\r\n  form: formReducer\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nclass Home extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/login\">\r\n          <Button color=\"blue\">Login</Button>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <Button color=\"green\">Sign Up</Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// eslint-disable-next-line\r\nconst apiURL = \"https://kb512-team-up-api.herokuapp.com\";\r\n// eslint-disable-next-line\r\nconst localURL =\r\n  window.location.protocol + \"//\" + window.location.hostname + \":\" + 3001;\r\n\r\nexport default window.location.hostname === \"localhost\" ? localURL : apiURL;\r\n//export default apiURL;\r\n","import axios from \"axios\";\r\nimport URL from \"./url\";\r\n\r\nexport default axios.create({\r\n  baseURL: URL\r\n});\r\n","import axios from \"../apis/axios\";\r\n\r\nexport const loginUser = (formValues) => async (dispatch) => {\r\n  const { data: user } = await axios.get(\"/login\", {\r\n    params: formValues\r\n  });\r\n  dispatch({ type: \"LOGIN_USER\", payload: user });\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return { type: \"LOGOUT\" };\r\n};\r\n\r\nexport const switchTab = (tab) => {\r\n  return { type: \"SWITCH_TAB\", payload: tab };\r\n};\r\n\r\nexport const switchChannel = (channel) => {\r\n  return { type: \"SWITCH_CHANNEL\", payload: channel };\r\n};\r\n\r\nexport const loadChannels = (username) => async (dispatch) => {\r\n  const { data: channels } = await axios.get(\"/channels\", {\r\n    params: { username }\r\n  });\r\n  dispatch({\r\n    type: \"LOAD_USER_CHANNELS\",\r\n    payload: channels\r\n  });\r\n};\r\n\r\nexport const loadPosts = (posts) => {\r\n  return {\r\n    type: \"LOAD_USER_POSTS\",\r\n    payload: posts\r\n  };\r\n};\r\n\r\nexport const loadInvites = (username) => async (dispatch) => {\r\n  const invites = (await axios.get(\"/invitations\", { params: { username } }))\r\n    .data;\r\n  dispatch({\r\n    type: \"LOAD_USER_INVITES\",\r\n    payload: invites\r\n  });\r\n};\r\n\r\nexport const loadTop5 = (entity, filter) => async (dispatch) => {\r\n  filter =\r\n    filter.$gte || filter.$lte ? JSON.stringify({ created: filter }) : {};\r\n  const data = (await axios.get(\"/top5\", { params: { entity, filter } })).data;\r\n  dispatch({ type: \"FETCH_TOP5\", payload: { entity, data } });\r\n};\r\n\r\nexport const respondToInvite = (invite_data, isAccepted = true) => async () => {\r\n  if (isAccepted) await axios.put(\"/invitations\", invite_data);\r\n  else await axios.delete(\"/invitations\", { params: invite_data });\r\n  return null;\r\n};\r\n\r\nexport const createChannel = (formValues) => async (dispatch) => {\r\n  const msg = (await axios.post(\"/channels\", formValues)).data.msg;\r\n  alert(msg);\r\n  const channels = (\r\n    await axios.get(\"/channels\", { params: { username: formValues.username } })\r\n  ).data;\r\n  dispatch({ type: \"CREATE_CHANNEL\", payload: channels });\r\n};\r\n\r\nexport const createInvite = async (formValues) => {\r\n  const res = (await axios.post(\"/invitations\", formValues)).data;\r\n  return res;\r\n};\r\n\r\nexport const updatePosts = (newPost) => {\r\n  return { type: \"NEW_POST\", payload: newPost };\r\n};\r\n","const createHistory = require(\"history\").createBrowserHistory;\r\n\r\nexport default createHistory();\r\n","import React from \"react\";\r\nimport { Form, Message } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport { loginUser } from \"../action creators\";\r\nimport history from \"../history\";\r\n\r\nclass Login extends React.Component {\r\n  state = {};\r\n  componentDidUpdate = () => {\r\n    const { user, submitSucceeded } = this.props;\r\n    if (user._id) {\r\n      sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n      history.push(\"/user\");\r\n    } else if (!this.state.err && submitSucceeded) this.setState({ err: true });\r\n  };\r\n\r\n  renderInput = ({ input, type }) => {\r\n    return (\r\n      <Form.Input\r\n        label={input.name[0].toUpperCase() + input.name.slice(1)}\r\n        type={type}\r\n        style={{ width: \"25vw\" }}\r\n        {...input}\r\n        required\r\n        autoComplete={\"off\"}\r\n      />\r\n    );\r\n  };\r\n\r\n  render = () => {\r\n    const { loginUser, handleSubmit, submitting } = this.props;\r\n    return (\r\n      <Form error={this.state.err} onSubmit={handleSubmit(loginUser)}>\r\n        <Field name=\"username\" type=\"text\" component={this.renderInput} />\r\n        <Field name=\"password\" type=\"password\" component={this.renderInput} />\r\n        <Message\r\n          error\r\n          header=\"Login Failed\"\r\n          style={{ width: \"25vw\" }}\r\n          content=\"Invalid Username or Password\"\r\n        />\r\n        <br />\r\n        <Form.Button loading={submitting} type=\"submit\" color=\"blue\">\r\n          Login\r\n        </Form.Button>\r\n      </Form>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n  return { user };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser })(\r\n  reduxForm({\r\n    form: \"login\"\r\n  })(Login)\r\n);\r\n","import React from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\r\nimport _ from \"lodash\";\r\n\r\nimport history from \"../history\";\r\nimport axios from \"../apis/axios\";\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    requestSent: false\r\n  };\r\n\r\n  onSubmit = async (formValues) => {\r\n    this.setState({ requestSent: true });\r\n    let error = {};\r\n    const validator = {\r\n      email: {\r\n        // eslint-disable-next-line\r\n        pattern: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\r\n        err: \"Please enter a valid email address\"\r\n      },\r\n      password: {\r\n        pattern: /^[a-zA-Z0-9._@]{8,}$/,\r\n        err:\r\n          \"Invalid Password Format ( only '.' , '@' , '_' , a-z , A-Z , 0-9 are allowed. Min Length = 8 )\"\r\n      },\r\n      region: { pattern: /^[a-zA-Z]{2,}$/, err: \"Enter a valid region\" },\r\n      username: {\r\n        pattern: /^[a-z0-9_-]{3,}$/,\r\n        err:\r\n          \"Enter a valid username ( only '-' , '_' , a-z , A-Z , 0-9 are allowed. Min Length = 3 )  \"\r\n      }\r\n    };\r\n\r\n    for (let [key, val] of Object.entries(formValues)) {\r\n      const { pattern, err } = validator[key];\r\n      if (!pattern.test(val)) {\r\n        error[key] = err;\r\n      }\r\n    }\r\n    if (!Object.entries(error).length) {\r\n      const { data } = await axios.post(\"/register\", formValues);\r\n      if (data._id) {\r\n        sessionStorage.setItem(\"user\", JSON.stringify(data));\r\n        this.props.reset();\r\n        history.push(\"/user\");\r\n      } else _.assign(error, data);\r\n    }\r\n    this.setState({ requestSent: false });\r\n    if (Object.entries(error).length) throw new SubmissionError(error);\r\n  };\r\n\r\n  renderInput = ({\r\n    input,\r\n    type,\r\n    meta: { asyncValidating, error, touched }\r\n  }) => {\r\n    return (\r\n      <Form.Group>\r\n        <Form.Input\r\n          label={input.name[0].toUpperCase() + input.name.slice(1)}\r\n          type={type}\r\n          style={{ width: \"25vw\" }}\r\n          error={\r\n            touched && error ? { content: error, pointing: \"left\" } : undefined\r\n          }\r\n          {...input}\r\n          loading={asyncValidating}\r\n          required\r\n          autoComplete={\"off\"}\r\n        />\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  render = () => {\r\n    const { handleSubmit, pristine, reset, submitting } = this.props;\r\n    return (\r\n      <Form onSubmit={handleSubmit(this.onSubmit)}>\r\n        <Field name=\"email\" type=\"email\" component={this.renderInput} />\r\n        <Field name=\"region\" type=\"text\" component={this.renderInput} />\r\n        <Field name=\"username\" type=\"text\" component={this.renderInput} />\r\n        <Field name=\"password\" type=\"password\" component={this.renderInput} />\r\n        <br />\r\n        <Button type=\"submit\" loading={this.state.requestSent} color=\"green\">\r\n          Register\r\n        </Button>\r\n        <Button disabled={pristine || submitting} onClick={reset} color=\"red\">\r\n          Reset\r\n        </Button>\r\n      </Form>\r\n    );\r\n  };\r\n}\r\nexport default reduxForm({\r\n  form: \"register\",\r\n  asyncValidate: async ({ email, username }) => {\r\n    const { data } = await axios.get(\"/validate\", {\r\n      params: { email, username }\r\n    });\r\n    if (data.email || data.username) throw data;\r\n  },\r\n  asyncChangeFields: [\"username\", \"email\"]\r\n})(Register);\r\n","import React from \"react\";\r\nimport { Button, Icon, Form, Modal, TextArea, Label } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createChannel } from \"../../action creators\";\r\n\r\nclass NewChannelModal extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    description: \"\",\r\n    tag: \"\",\r\n    tags: [],\r\n    modalOpen: false,\r\n    error: { name: false, description: false, tag: false }\r\n  };\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n  handleOpen = () => this.setState({ modalOpen: true });\r\n  handleClose = () => this.setState({ modalOpen: false });\r\n\r\n  validate = () => {\r\n    let error = { name: false, description: false },\r\n      flag = true;\r\n    if (!this.state.name.length) {\r\n      error.name = \"Enter a Channel Name\";\r\n      flag = false;\r\n    }\r\n    if (!this.state.description.length) {\r\n      error.description = \"Enter a Description\";\r\n      flag = false;\r\n    }\r\n    if (this.state.tags.length <= 0) {\r\n      error.tag = \"Add atleast one tag\";\r\n      flag = false;\r\n    }\r\n    this.setState({ error });\r\n    return flag;\r\n  };\r\n\r\n  validateTag = () => {\r\n    let error = { ...this.state.error };\r\n    if (this.state.tag.length <= 0) {\r\n      error.tag = \"Enter a Tag\";\r\n      this.setState({ error });\r\n      return false;\r\n    } else if (this.state.tags.includes(this.state.tag)) {\r\n      error.tag = \"Tag already added\";\r\n      this.setState({ error });\r\n      return false;\r\n    }\r\n    error.tag = false;\r\n    this.setState({ error });\r\n    return true;\r\n  };\r\n\r\n  onSubmitTag = () => {\r\n    if (this.validateTag())\r\n      this.setState({ tags: [...this.state.tags, this.state.tag] });\r\n  };\r\n\r\n  removeTag = t => {\r\n    this.setState({ tags: this.state.tags.filter(tag => tag !== t) });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    if (this.validate()) {\r\n      this.props.createChannel({\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        tags: this.state.tags,\r\n        username: this.props.username\r\n      });\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  renderTags = () =>\r\n    this.state.tags.map(tag => {\r\n      return (\r\n        <Label key={tag} color=\"orange\">\r\n          {tag}\r\n          <Icon\r\n            name=\"delete\"\r\n            link\r\n            onClick={() => {\r\n              this.removeTag(tag);\r\n            }}\r\n          />\r\n        </Label>\r\n      );\r\n    });\r\n\r\n  render = () => {\r\n    return (\r\n      <Modal\r\n        trigger={\r\n          <Button onClick={this.handleOpen} icon primary>\r\n            <Icon name=\"add\" /> New Channel\r\n          </Button>\r\n        }\r\n        open={this.state.modalOpen}\r\n        onClose={this.handleClose}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Create a new Channel</Modal.Header>\r\n        <Modal.Content image>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Input\r\n                label=\"Name\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                style={{ width: \"40rem\" }}\r\n                error={\r\n                  this.state.error.name\r\n                    ? {\r\n                        content: this.state.error.name,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                label=\"Description\"\r\n                placeholder=\"Description\"\r\n                control={TextArea}\r\n                name=\"description\"\r\n                onChange={this.handleChange}\r\n                style={{ width: \"40rem\", height: \"10rem\" }}\r\n                error={\r\n                  this.state.error.description\r\n                    ? {\r\n                        content: this.state.error.description,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <Form.Input\r\n                label=\"Tag\"\r\n                placeholder=\"Tag\"\r\n                name=\"tag\"\r\n                onChange={this.handleChange}\r\n                error={\r\n                  this.state.error.tag\r\n                    ? {\r\n                        content: this.state.error.tag,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n              <Icon\r\n                size=\"large\"\r\n                color=\"green\"\r\n                name=\"add\"\r\n                link\r\n                onClick={this.onSubmitTag}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group> {this.renderTags()}</Form.Group>\r\n            <br />\r\n            <Modal.Actions>\r\n              <Button color=\"green\" onClick={this.onSubmit}>\r\n                SUBMIT\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  };\r\n}\r\n\r\nconst getData = ({ user }) => user;\r\n\r\nexport default connect(getData, { createChannel })(NewChannelModal);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Icon, Form, Modal, Dropdown } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createInvite, loadChannels } from \"../../action creators\";\r\nclass CreateInvite extends Component {\r\n  state = {\r\n    channel: {},\r\n    username: \"\",\r\n    modalOpen: false,\r\n    requestSent: false,\r\n    error: { username: false, channel: false }\r\n  };\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name]: name === \"channel\" ? JSON.parse(value) : value });\r\n  openModal = () => {\r\n    if (this.props.channels.length < 1) {\r\n      alert(\"No Channel created to Invite anyone\");\r\n    } else this.setState({ modalOpen: true });\r\n  };\r\n  closeModal = () => this.setState({ modalOpen: false });\r\n\r\n  validate = () => {\r\n    this.setState({ requestSent: true });\r\n    let error = { username: false, channel: false },\r\n      flag = true;\r\n    if (!this.state.channel._id) {\r\n      error.channel = \"Select a Channel\";\r\n      flag = false;\r\n    }\r\n    this.setState({ error });\r\n    return flag;\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    if (!this.validate()) {\r\n      this.setState({ requestSent: false });\r\n      return;\r\n    }\r\n    const msg = await createInvite({\r\n      channel_id: this.state.channel._id,\r\n      channel_name: this.state.channel.name,\r\n      username: this.state.username,\r\n      sent_by: this.state.channel.username\r\n    });\r\n    this.setState({ requestSent: false });\r\n    if (msg.err) {\r\n      this.setState({\r\n        error: { username: msg.err, channel: false }\r\n      });\r\n    } else {\r\n      this.closeModal();\r\n      alert(msg.msg);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        trigger={\r\n          <Button onClick={this.openModal} icon primary>\r\n            <Icon name=\"add\" /> New Invite\r\n          </Button>\r\n        }\r\n        open={this.state.modalOpen}\r\n        onClose={this.closeModal}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Send an Invite </Modal.Header>\r\n        <Modal.Content image>\r\n          <Form>\r\n            <Form.Group>\r\n              <Dropdown\r\n                style={{ marginLeft: \"2%\" }}\r\n                name=\"channel\"\r\n                onChange={this.handleChange}\r\n                placeholder=\"Channel\"\r\n                error={Boolean(this.state.error.channel)}\r\n                options={this.props.channels\r\n                  .filter(ch => ch.username === this.props.user.username)\r\n                  .map(({ _id, name, username }) => {\r\n                    return {\r\n                      key: _id,\r\n                      text: name,\r\n                      value: JSON.stringify({ _id, name, username })\r\n                    };\r\n                  })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Input\r\n                label=\"Username\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                onChange={this.handleChange}\r\n                style={{ width: \"40rem\" }}\r\n                error={\r\n                  this.state.error.username\r\n                    ? {\r\n                        content: this.state.error.username,\r\n                        pointing: \"left\"\r\n                      }\r\n                    : undefined\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <br />\r\n            <Modal.Actions>\r\n              {this.state.requestSent ? (\r\n                <Button loading primary>\r\n                  Loading\r\n                </Button>\r\n              ) : (\r\n                <Button color=\"blue\" onClick={this.onSubmit}>\r\n                  INVITE\r\n                </Button>\r\n              )}\r\n            </Modal.Actions>\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ channels, user }) => {\r\n    return { channels, user };\r\n  },\r\n  { loadChannels }\r\n)(CreateInvite);\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { switchTab } from \"../../action creators\";\r\nimport NewChannelBtn from \"./newChannel\";\r\nimport NewInviteBtn from \"./newInvite\";\r\n\r\nclass Navbar extends Component {\r\n  state = { activeItem: \"POSTS\" };\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.props.switchTab(name);\r\n    this.setState({ activeItem: name });\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu\r\n        style={{ position: \"relative\", height: \"6%\" }}\r\n        size=\"large\"\r\n        pointing\r\n      >\r\n        <Menu.Item header>TEAM-UP</Menu.Item>\r\n        <Menu.Item\r\n          name=\"POSTS\"\r\n          active={this.state.activeItem === \"POSTS\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"TOP5\"\r\n          active={this.state.activeItem === \"TOP5\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item\r\n            name=\"INVITES\"\r\n            active={this.state.activeItem === \"INVITES\"}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Item>\r\n            <NewChannelBtn />\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <NewInviteBtn />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { switchTab })(Navbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../action creators\";\r\nimport { Button, Header, Image, Segment } from \"semantic-ui-react\";\r\n\r\nclass Head extends React.Component {\r\n  state = {};\r\n  logout = () => {\r\n    sessionStorage.clear();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <Segment style={{ height: \"auto\" }} clearing>\r\n        <Header as=\"h2\" floated=\"left\">\r\n          <Image\r\n            circular\r\n            src=\"https://react.semantic-ui.com/images/avatar/large/patrick.png\"\r\n          />\r\n          {this.props.username}\r\n        </Header>\r\n        <Link to=\"/\">\r\n          <Button floated=\"right\" color=\"black\" onClick={this.logout}>\r\n            Logout\r\n          </Button>\r\n        </Link>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { logoutUser })(Head);\r\n","import React from \"react\";\r\nimport { Menu, Loader } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadChannels, switchChannel } from \"../../../action creators\";\r\nclass Channels extends React.Component {\r\n  state = { activeItem: \"\" };\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.loadChannels(this.props.user.username);\r\n    if (this.props.channels && this.props.channels.length)\r\n      this.setState({ activeItem: this.props.channels[0].name });\r\n  };\r\n\r\n  channelList = channel => (\r\n    <Menu.Item\r\n      name={channel.name}\r\n      key={channel._id}\r\n      active={this.state.activeItem === channel.name}\r\n      onClick={(e, item) => {\r\n        this.handleItemClick(e, item);\r\n        this.props.switchChannel(channel);\r\n      }}\r\n    />\r\n  );\r\n\r\n  render = () =>\r\n    this.props.channels ? (\r\n      <Menu text vertical stackable>\r\n        <Menu.Item header>CHANNELS</Menu.Item>\r\n        {this.props.channels.map(channel => this.channelList(channel))}\r\n      </Menu>\r\n    ) : (\r\n      <Loader active inline />\r\n    );\r\n}\r\n\r\nconst getChannels = ({ user, channels }) => {\r\n  return { user, channels };\r\n};\r\n\r\nexport default connect(getChannels, { loadChannels, switchChannel })(Channels);\r\n","import io from \"socket.io-client\";\r\nimport URL from \"./url\";\r\n\r\nconst socket = io(URL);\r\n\r\nexport default socket;\r\n","import React, { Component } from \"react\";\r\nimport { TextArea, Segment, Dropdown, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport socket from \"../../../apis/sockets\";\r\n\r\nconst contentCSS = {\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  height: \"70%\",\r\n  resize: \"none\"\r\n};\r\nclass PostForm extends Component {\r\n  state = { content: \"\", tags: [], error: false };\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    this.setState({\r\n      [name]:\r\n        name === \"content\"\r\n          ? value.replace(/[/^ *$/]{2,}/g, \" \").replace(/^\\s*[\\r\\n]/gm, \"\")\r\n          : value\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    if (this.state.content.length < 2) {\r\n      this.setState({ error: \"Invalid Content\" });\r\n      return false;\r\n    }\r\n    this.setState({ error: false });\r\n    return true;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    if (!this.validate()) return;\r\n    socket.emit(\"new_post\", {\r\n      username: this.props.user.username,\r\n      tags: this.state.tags,\r\n      content: this.state.content,\r\n      channel_id: this.props.activeChannel._id\r\n    });\r\n    this.setState({ content: \"\", tags: [], error: false });\r\n  };\r\n\r\n  render() {\r\n    return this.props.activeChannel._id ? (\r\n      <Segment\r\n        style={{\r\n          position: \"relative\",\r\n          height: \"20%\",\r\n          marginTop: \"0\",\r\n          top: \"0\",\r\n          bottom: \"0\",\r\n          background: \"#989898\"\r\n        }}\r\n      >\r\n        <Dropdown\r\n          name=\"tags\"\r\n          placeholder=\"Tags\"\r\n          style={{ position: \"relative\", marginBottom: \"0.3%\" }}\r\n          multiple\r\n          selection\r\n          value={this.state.tags}\r\n          options={this.props.activeChannel.tags.map((tag) => {\r\n            return { key: tag, text: tag, value: tag };\r\n          })}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Button color=\"green\" floated=\"right\" onClick={this.onSubmit}>\r\n          POST\r\n        </Button>\r\n        <br />\r\n        <TextArea\r\n          name=\"content\"\r\n          placeholder={this.state.error ? \"Enter some text!\" : \"Post Content\"}\r\n          style={\r\n            this.state.error\r\n              ? _.assign(contentCSS, { border: \"4px solid red\" })\r\n              : contentCSS\r\n          }\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n      </Segment>\r\n    ) : (\r\n      <React.Fragment>Loading..</React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(({ activeChannel, user }) => {\r\n  return { activeChannel, user };\r\n})(PostForm);\r\n","import React, { Component } from \"react\";\r\nimport { Segment, Feed, Label } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { updatePosts, loadPosts } from \"../../../action creators\";\r\nimport socket from \"../../../apis/sockets\";\r\n\r\nclass ChatContainer extends Component {\r\n  state = { activeChannel: false };\r\n\r\n  componentDidMount = () => {\r\n    let container = document.getElementById(\"chatContainer\");\r\n    container.onscroll = () => {\r\n      // console.clear();\r\n      //   console.log(container.scrollTop, container.scrollHeight);\r\n      if (container.scrollTop === 0) {\r\n        socket.emit(\r\n          \"fetch_old_posts\",\r\n          {\r\n            channel_id: this.props.activeChannel._id,\r\n            skip: this.props.posts.length\r\n          },\r\n          this.props.loadPosts\r\n        );\r\n      }\r\n    };\r\n    socket.on(\"new_post_braodcast\", (obj) => {\r\n      this.props.updatePosts(obj);\r\n      if (container.scrollHeight) container.scrollTop = container.scrollHeight;\r\n    });\r\n  };\r\n\r\n  componentDidUpdate = (prev) => {\r\n    let container = document.getElementById(\"chatContainer\"),\r\n      prevH = prev.posts.length,\r\n      currentH = this.props.posts.length;\r\n    if (prevH < currentH) {\r\n      if (prevH < 1) container.scrollTop = container.scrollHeight;\r\n      else\r\n        container.scrollTop =\r\n          1 + (container.scrollHeight * (currentH - prevH)) / currentH;\r\n    }\r\n  };\r\n  static getDerivedStateFromProps = (props, state) => {\r\n    if (\r\n      props.activeChannel &&\r\n      props.activeChannel._id !== state.activeChannel._id\r\n    ) {\r\n      socket.emit(\r\n        \"join_channel_room\",\r\n        props.activeChannel._id,\r\n        props.loadPosts\r\n      );\r\n      return { activeChannel: props.activeChannel };\r\n    }\r\n    return state;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Segment\r\n        id=\"chatContainer\"\r\n        style={{\r\n          position: \"relative\",\r\n          overflowY: \"scroll\",\r\n          scrollBehavior: \"smooth\",\r\n          height: \"70%\",\r\n          marginBottom: \"0\",\r\n          background: \"#D0D0D0\"\r\n        }}\r\n      >\r\n        {this.props.posts.map((post, i) => createPost(post, i))}\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nconst createPost = (post) => {\r\n  return (\r\n    <Segment style={{ wordWrap: \"break-word\" }} key={post._id}>\r\n      <Feed.User>\r\n        <b style={{ marginRight: \"1%\", fontSize: \"1.1rem\" }}>{post.username}</b>\r\n      </Feed.User>\r\n      <span style={{ color: \"#bfbfbf\", fontSize: \"0.85rem\" }}>\r\n        {moment(post.created, \"x\").format(\"h:mm A, D-MMM-YYYY\")}\r\n      </span>\r\n      <span style={{ float: \"right\" }}>\r\n        {post.tags.map((tag, i) => (\r\n          <Label color=\"orange\" key={i}>\r\n            {tag}\r\n          </Label>\r\n        ))}\r\n      </span>\r\n      <br />\r\n      {replaceBreaklines(post.content.split(\"\\n\"))}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nconst replaceBreaklines = (arr) => {\r\n  let result = [];\r\n  arr.forEach((str, i) => {\r\n    result.push(str);\r\n    result.push(<br key={i} />);\r\n  });\r\n  result.pop();\r\n  return result;\r\n};\r\n\r\nconst getActiveChannel = ({ activeChannel, posts, user }) => {\r\n  return { activeChannel, posts, user };\r\n};\r\n\r\nexport default connect(getActiveChannel, { updatePosts, loadPosts })(\r\n  ChatContainer\r\n);\r\n","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Channels from \"./channels\";\r\nimport PostCreator from \"./PostCreator\";\r\nimport ChatContainer from \"./ChatContainer\";\r\n\r\nclass Posts extends React.Component {\r\n  state = {};\r\n  render = () => {\r\n    return (\r\n      <Grid style={{ position: \"relative\", height: \"100%\" }} stackable>\r\n        <Grid.Row\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"100%\",\r\n            paddingBottom: \"0\",\r\n            display: \"flex\"\r\n          }}\r\n          stretched\r\n        >\r\n          <Grid.Column\r\n            style={{\r\n              position: \"relative\",\r\n              overflowX: \"auto\",\r\n              overflowY: \"scroll\",\r\n              width: \"auto\",\r\n              height: \"100%\"\r\n            }}\r\n          >\r\n            <Channels />\r\n          </Grid.Column>\r\n          <br />\r\n          <Grid.Column\r\n            style={{\r\n              position: \"relative\",\r\n              flexGrow: \"100\",\r\n              height: \"100%\"\r\n            }}\r\n          >\r\n            <ChatContainer />\r\n            <PostCreator />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport { loadTop5 } from \"../../../action creators\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nclass Filter extends Component {\r\n  state = {};\r\n  handleChange = (e, { name, value }) => {\r\n    const time =\r\n      name === \"$lte\"\r\n        ? moment(value)\r\n            .add(\"1\", \"day\")\r\n            .subtract(\"1\", \"milliseconds\")\r\n            .format(\"x\")\r\n        : moment(value).format(\"x\");\r\n\r\n    if (value === \"\") {\r\n      this.updateTop5(_.omit(this.state, name));\r\n      delete this.state[name];\r\n      this.setState({});\r\n    } else {\r\n      if (!this.validate(name, time)) {\r\n        alert(\"Invalid Range\");\r\n        return;\r\n      }\r\n      this.updateTop5({ ...this.state, [name]: time });\r\n      this.setState({\r\n        [name]: time\r\n      });\r\n    }\r\n  };\r\n\r\n  validate = (name, time) => {\r\n    if (name === \"$lte\" && this.state.$gte)\r\n      return this.state.$gte.localeCompare(time) === -1;\r\n    if (name === \"$gte\" && this.state.$lte)\r\n      return time.localeCompare(this.state.$lte) === -1;\r\n    return true;\r\n  };\r\n\r\n  updateTop5 = filter => {\r\n    this.props.loadTop5(\"channels\", filter);\r\n    this.props.loadTop5(\"users\", filter);\r\n    this.props.loadTop5(\"tags\", filter);\r\n    this.props.loadTop5(\"regions\", filter);\r\n  };\r\n  s;\r\n\r\n  render = () => {\r\n    return (\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        <Form.Input\r\n          label=\"FROM:\"\r\n          name=\"$gte\"\r\n          type=\"date\"\r\n          style={{ marginLeft: \"1rem\" }}\r\n          onChange={this.handleChange}\r\n          max={moment(Date.now(), \"x\").format(\"YYYY-MM-DD\")}\r\n        />\r\n        <div style={{ marginLeft: \"3rem\" }}>\r\n          <Form.Input\r\n            label=\"TO:\"\r\n            name=\"$lte\"\r\n            type=\"date\"\r\n            style={{ marginLeft: \"1rem\" }}\r\n            onChange={this.handleChange}\r\n            max={moment(Date.now(), \"x\").format(\"YYYY-MM-DD\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default connect(null, { loadTop5 })(Filter);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Segment, Header, Table } from \"semantic-ui-react\";\r\nimport { loadTop5 } from \"../../../action creators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Entity extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.loadTop5(this.props.name, {});\r\n  };\r\n  createList = arr => {\r\n    return (\r\n      <Table style={{ textAlign: \"center\" }} basic=\"very\" celled collapsing>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>{this.props.name.toUpperCase()}</Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              {this.units(this.props.name).toUpperCase()}\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {arr.map(item => (\r\n            <Table.Row\r\n              key={this.props.name === \"channels\" ? item.name : item._id}\r\n            >\r\n              <Table.Cell>\r\n                {this.props.name === \"channels\" ? item.name : item._id}\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                {this.props.name === \"tags\" ? item.channels.length : item.count}\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  };\r\n  units(name) {\r\n    switch (name) {\r\n      case \"channels\":\r\n      case \"users\":\r\n        return \"Posts\";\r\n      case \"regions\":\r\n        return \"Users\";\r\n      case \"tags\":\r\n        return \"Channels\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n  render() {\r\n    return this.props[this.props.name] ? (\r\n      <Segment>\r\n        <Header as=\"h2\" floated=\"left\">\r\n          Top {this.props.name}\r\n        </Header>\r\n        <br />\r\n        {this.createList(this.props[this.props.name])}\r\n      </Segment>\r\n    ) : (\r\n      <Dimmer active inverted>\r\n        <Loader content=\"Loading\" />\r\n      </Dimmer>\r\n    );\r\n  }\r\n}\r\n\r\nconst getTop5 = ({ top5 }, { name }) => {\r\n  return { [name]: top5[name] };\r\n};\r\n\r\nexport default connect(getTop5, { loadTop5 })(Entity);\r\n","import React from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport Filter from \"./filter\";\r\nimport Entity from \"./EntityTable\";\r\n\r\nclass Top5 extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <>\r\n        <Filter />\r\n        <Segment.Group horizontal>\r\n          <Entity name=\"users\" />\r\n          <Entity name=\"channels\" />\r\n        </Segment.Group>\r\n        <Segment.Group horizontal>\r\n          <Entity name=\"regions\" />\r\n          <Entity name=\"tags\" />\r\n        </Segment.Group>\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Top5;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { respondToInvite, loadInvites } from \"../../action creators\";\r\n\r\nclass Invites extends React.Component {\r\n  state = {};\r\n  componentDidMount = async () => {\r\n    await this.props.loadInvites(this.props.user.username);\r\n    //console.log(this.props);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.invites.length\r\n          ? this.props.invites.map(invite => (\r\n              <Card key={invite._id}>\r\n                <Card.Content>\r\n                  <Card.Header>{invite.channel_name}</Card.Header>\r\n                  <Card.Description>\r\n                    <strong>{invite.sent_by}</strong> invited you to this\r\n                    channel.\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                  <div className=\"ui two buttons\">\r\n                    <Button\r\n                      onClick={async () => {\r\n                        await this.props.respondToInvite({\r\n                          _id: invite._id\r\n                        });\r\n                        await this.props.loadInvites(this.props.user.username);\r\n                      }}\r\n                      basic\r\n                      color=\"green\"\r\n                    >\r\n                      Accept\r\n                    </Button>\r\n                    <Button\r\n                      onClick={async () => {\r\n                        await this.props.respondToInvite(\r\n                          {\r\n                            _id: invite._id\r\n                          },\r\n                          false\r\n                        );\r\n                        await this.props.loadInvites(this.props.user.username);\r\n                      }}\r\n                      basic\r\n                      color=\"red\"\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            ))\r\n          : \"No Invites\"}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst getData = ({ user, invites }) => {\r\n  return { user, invites };\r\n};\r\n\r\nexport default connect(getData, { respondToInvite, loadInvites })(Invites);\r\n","import React from \"react\";\r\nimport Posts from \"./Posts/index\";\r\nimport Top5 from \"./Top5/index\";\r\nimport Invites from \"./invites\";\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nclass ActiveTab extends React.Component {\r\n  selectTab = () => {\r\n    switch (this.props.tab) {\r\n      case \"TOP5\":\r\n        return <Top5 />;\r\n      case \"INVITES\":\r\n        return <Invites />;\r\n      default:\r\n        return <Posts />;\r\n    }\r\n  };\r\n  render = () => (\r\n    <Segment style={{ position: \"relative\", height: \"80%\" }}>\r\n      {this.selectTab()}\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default ActiveTab;\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navbar from \"../Navbar\";\r\nimport Header from \"./header\";\r\nimport Tabs from \"../Tabs\";\r\nimport history from \"../../history\";\r\n\r\nclass User extends React.Component {\r\n  state = {};\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n      const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n      if (!user) {\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n    }, 800);\r\n  };\r\n  render = () => {\r\n    return this.props.user ? (\r\n      <React.Fragment>\r\n        <Header username={this.props.user.username} />\r\n\r\n        <Navbar />\r\n        <Tabs tab={this.props.activeTab} />\r\n      </React.Fragment>\r\n    ) : (\r\n      <Dimmer active inverted>\r\n        <Loader content=\"Loading\" />\r\n      </Dimmer>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ activeTab, user }) => {\r\n  return { activeTab, user };\r\n};\r\nexport default connect(mapStateToProps)(User);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./home\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\nimport User from \"./User\";\r\n\r\nclass Routes extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/user\" component={User} />\r\n      </Switch>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Routes from \"./routes\";\r\nimport { Router } from \"react-router-dom\";\r\nimport history from \"../history\";\r\n\r\nexport default class App extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          padding: \"2%\",\r\n          position: \"absolute\",\r\n          width: \"100vw\",\r\n          height: \"100vh\"\r\n        }}\r\n      >\r\n        <Router history={history}>\r\n          <Routes />\r\n        </Router>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport App from \"./components/App\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}